/* Browser Default Resets */

* {
  box-sizing: border-box;
}
body {
  margin: 0;
}
h1,
h2,
h3,
p,
input {
  margin: 0;
}
svg {
  display: block;
  height: 100%;
}

/* Color Scheme */

[data-theme="light"] {
  --color-foreground: black;
  --color-background: white;
  --image-background: #fff5f0;
}

[data-theme="dark"] {
  --color-foreground: white;
  --color-background: black;
  --image-background: #262421;
}

body,
.header-normal {
  background: var(--color-background);
}

* {
  color: var(--color-foreground);
}
.font-alert {
  color: red;
}
svg {
  fill: var(--color-foreground);
}

/* Text */

* {
  font-family: "Montserrat";
}

.font-nav,
.font-title {
  font-weight: 900;
}
.searchbar,
.font-text-bold {
  font-weight: 600;
}
.font-description,
.font-text {
  font-weight: 400;
}

.font-description {
  font-size: calc(0.95rem + 0.25vw);
  max-inline-size: 45ch;
}
.font-title {
  font-size: calc(1.35rem + 0.25vw);
}
.font-nav {
  font-size: calc(0.8rem + 0.25vw);
}

.font-nav,
.font-title {
  text-transform: uppercase;
}

a {
  text-decoration: none;
}
.font-nav:hover {
  text-decoration: underline;
}

/* SVG Elements */
/* Only responsive SVGs with preserved aspect ratio were used. */
/* Thus, only one axis needed to be manipulated */

:root {
  --header-icon-size: calc(1.35rem + 0.25vw);
}

.logo {
  height: var(--header-icon-size);
}

.logo-big {
  height: calc(2.5rem + 0.25vw);
}

.arrow,
.plus,
.brightness {
  display: inline;
  height: 1rem;
}
.arrow {
  margin-left: 0.5rem;
}
.brightness {
  cursor: pointer;
}

/* Layout */

:root {
  --page-margin: 1rem;
}

body {
  overflow: scroll;
}

.grid {
  display: grid;
}

.bgimage {
  object-fit: cover;
  object-position: 50% 50%;
}

ul li {
  list-style: disclosure-closed;
}

form {
  display: flex;
  flex-direction: column;
}
input:not([type="checkbox"]) {
  background: transparent;
  border: var(--size-border) solid var(--color-foreground);
  border-radius: 50px 50px;
  padding: 1rem 1.5rem;
  height: var(--header-icon-size);
  color: var(--color-foreground);
}
input:focus {
  outline: none;
}

/* Layout - Elements */

:root {
  --size-border: 0.175rem;
}

.searchbar {
  grid-row: 2 / 3;
  grid-column: 1 / 3;
  width: 80%;
}
@media (max-width: 47rem) {
  .searchbar {
    width: 100%;
  }
}

/* Layout - Generic Elements */

.relative-container {
  position: relative;
  height: 100%;
}

.absolute-container {
  position: absolute;
  height: 100%;
  width: 100%;
}

.text-container {
  padding: var(--page-margin);
}

.margins {
  margin: var(--page-margin);
}

.textsection {
  width: 100%;
  border-width: var(--size-border) 0;
  border-color: var(--color-foreground);
  border-style: solid;
  padding: 0.5rem 0;
  margin-bottom: 1rem;
}

.search-results .textsection {
  width: 50%;
  padding-left: 1.5rem;
  border-width: var(--size-border);
}
@media (max-width: 47rem) {
  .search-results .textsection {
    width: 100%;
  }
}

/* Layout - Stacking */
/* The usage of Next.js's Image component for any background images */
/* affected the regular stacking order due to the positioned elements involved, */
/* so z-indexes had to be defined where necessary */

header {
  z-index: 999;
}
.userdatasaverask {
  /* Cookies prompt */
  /* When testing deployment, it would be hidden or not render if the class had an */
  /* obvious name (maybe a conflict with something from Vercel?), so something else had to be chosen */
  z-index: 999999999;
}
/* Layout - Header */

.header {
  position: sticky;
  top: 0;
  background: var(--color-background);
  border-bottom: var(--size-border) solid var(--color-foreground);
  width: 100%;
  padding: var(--page-margin);
}
.button {
  cursor: pointer;
  background: var(--color-background);
  border: var(--size-border) solid var(--color-foreground);
  border-radius: 50px 50px;
  margin: 0.5rem;
  padding: 0.25rem 0.5rem;
  transition: background 0.15s linear, color 0.15s linear;
}
.button:hover,
.button:focus {
  background: var(--color-foreground);
  color: var(--color-background);
}

/* Header Grid */

:root {
  --header-element-gap: 1rem;
}

.header {
  display: grid;
  row-gap: var(--header-element-gap);
  column-gap: 1.5rem;
  grid-template-columns: 0.25fr repeat(3, 1fr);
  align-items: center;
}

.header-links {
  display: flex;
  width: max-content;
  gap: var(--header-element-gap);
}

.header-buttons {
  grid-column: 4 / 5;
  justify-self: end;
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
}
.svg-icon {
  height: calc(var(--header-icon-size) - 0.375rem);
}
.plus {
  display: none;
}

@media (min-width: 47rem) {
  .header-more-container,
  .header-more > * {
    display: none;
  }
}

.search-results {
  width: 100vw;
  height: 100vh;
  position: fixed;
  padding: var(--page-margin);
  background: var(--color-background);
  z-index: 9999999;
}
.search-results > * {
  margin-left: 1.4rem;
}

@media (max-width: 47rem) {
  .search-results {
    top: 8rem;
  }
}

@media (max-width: 47rem) {
  /* Reveals relevant items */
  .plus {
    display: block;
  }
  .header-more .header-links,
  .header-more .searchbar {
    visibility: visible;
  }
  /* Hides what shouldn't be shown on mobile */
  .header .header-links,
  .header .searchbar {
    display: none;
  }

  .font-nav {
    font-size: calc(1.2rem + 0.25vw);
    margin-left: 1.4rem;
  }

  .header-more-container {
    display: flex;
    position: fixed;
    width: 100vw;
    min-height: 100vh;
    max-height: 100vh;
    z-index: 1001;
    padding: var(--page-margin);
    background: var(--color-background);
    opacity: 0;
    visibility: hidden;
  }
  .header-more {
    display: flex;
    flex-direction: column;
    gap: var(--header-element-gap);
  }
  .header-links {
    align-self: left;
    flex-direction: column;
  }
}

/* Layout - Sections */

.loading-screen {
  display: flex;
  width: 100vw;
  height: 100vh;
  align-items: center;
  justify-content: center;
}
.userdatasaverask {
  position: fixed;
  display: flex;
  justify-content: center;
  flex-direction: column;
  padding: var(--page-margin);
  background: var(--color-background);
  border: var(--size-border) solid var(--color-foreground);
  bottom: var(--page-margin);
  left: var(--page-margin);
  visibility: hidden;
}

@media (max-width: 47rem) {
  .userdatasaverask {
    width: 100vw;
    bottom: 0;
    left: 0;
  }
}

/* Layout - Footer */

footer {
  display: grid;
  padding: var(--page-margin);
  border-top: var(--size-border) solid var(--color-foreground);
  gap: 0.5rem;
}
@media (orientation: landscape) {
  footer {
    grid-auto-flow: column;
    grid-template-rows: repeat(3, auto-fit);
    justify-content: stretch;
  }
  .footer-policies {
    display: flex;
    flex-direction: row;
  }
  .footer-about,
  .footer-customer {
    grid-row: 1 / 2;
  }
  .footer-policies {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    gap: 1.5rem;
  }
  .footer-author {
    grid-column: 1 / 2;
    grid-row: 3 / 4;
    padding-top: 1rem;
  }
}

/* CSS Animations */
:root {
  --animation-standby: standby 0.5s ease-in-out 0s infinite alternate;
}
@keyframes standby {
  from {
    opacity: 35%;
  }
  to {
    opacity: 100%;
  }
}
@keyframes header-more-fadein {
  0% {
    visibility: visible;
    opacity: 0%;
  }
  100% {
    visibility: visible;
    opacity: 100%;
  }
}
@keyframes header-more-fadeout {
  0% {
    opacity: 100%;
    visibility: visible;
  }
  99% {
    opacity: 0%;
    visibility: visible;
  }
  100% {
    visibility: hidden;
  }
}
@keyframes border-fade {
  0% {
    border-color: rgba(0, 0, 0, 0);
  }
  100% {
    border-color: rgb(255, 255, 255);
  }
}

.animation-fadein {
  animation: header-more-fadein 0.35s ease-in-out 0s 1 normal;
  animation-fill-mode: forwards;
}
.animation-fadeout {
  animation: header-more-fadeout 0.35s ease-in-out 0s 1 normal;
  animation-fill-mode: forwards;
}

.loading-screen .logo-big {
  animation: var(--animation-standby);
}

.scroll-disable {
  height: 100vh;
  overflow: hidden;
}

/* Scrollbar */

/* Chrome / Safari */

::-webkit-scrollbar {
  width: 0.2rem;
  height: 0.2rem;
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: var(--color-foreground);
}

/* CSS Standards / Firefox */

html {
  scrollbar-color: var(--color-foreground) var(--color-background);
}

.homepagecontainer > div {
  scroll-snap-type: both proximity;
}
.homepageitem {
  scroll-snap-align: start;
}
